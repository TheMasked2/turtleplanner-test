name: Deploy Test .NET/React App to Ubuntu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      DEPLOY_USER: thearchivist
      DEPLOY_HOST: 77.169.87.238 

    steps:
    # -----------------------------
    # 1. Checkout Code (MUST BE FIRST)
    # -----------------------------
    - name: Checkout Code
      uses: actions/checkout@v4

    # -----------------------------
    # 2. Build React Frontend
    # -----------------------------
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' 

    - name: Install Frontend Dependencies
      run: npm install
      # CORRECT PATH: 'frontend' is relative to the repository root
      working-directory: frontend 

    - name: Build React App (Vite generates 'dist')
      run: npm run build
      # CORRECT PATH
      working-directory: frontend

    # -----------------------------
    # 3. Build .NET Backend
    # -----------------------------
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        # **IMPORTANT: Use the version your project targets (e.g., '8.0.x' or '9.0.x')**
        dotnet-version: '8.0.x' 

    - name: Restore and Publish Backend
      # Publish command targets your specific project file inside the 'backend' directory
      run: dotnet publish ./backend/OfficePlanner.Api/OfficePlanner.Api.csproj -c Release -o ./publish -r linux-x64 --self-contained true
      
    # -----------------------------
    # 4. Deploy Files via SCP (Secure Copy)
    # -----------------------------
    
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: |
          77.169.87.238 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCgobOHuSV7N5Mba9PCf/yzx4l6qiphoB0zXQwPx8lvNl0DYwKX/BzaBb+CzWtAycH6QF+VFs0Cglum37ibigSnMGZNyupEeln78W9L1bPw07vtdC5SjQtCZucRjX8U5Eh1qMZxizgXEvopfToI1wF+xFAgIzuz2hugJ5MkwQ0wk20/46XrAav9RY1KcXy7e3ocQLI8X98EXSX7L8hXZWVD3RN08wBHMqZzM4CSrnzhpcFWjPmz4GDB5dL1wVPEZtb84NTtrgE5VfyQ2wvxgzpN1L6Fxu3BKECnL+3A8wMcNKsON3nWr52oITaonjOufNfRXZi6+I2+Am+AtxqgJ9EZxMX1rYtfvq2idzznBnDd5lW3hbjv+V+RVGRSaR1AynyYXKP2M7syPaA2Qem+/+uj6GCBVaj1LJRslH/VeK6XOYW1OzUZYs4ikSzxsX3wqN+AzSpTfA0NeByN2JINd8dELtdSLxrYoxApL638AnQzeeDoX+TOXAHBdfzHlk12ezU=
          77.169.87.238 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKgOCCwv44nJD8NH2eWUXwDxwkMO0nOJzpqvm1OZWZwvUg4GjYLCUx5C4tRnLtmGliRM3WvD12BRRNj0yhvjRI8=
          77.169.87.238 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIAniOcricyxU2n9lCztMNYTbEAk3foY5ynY73u31hjh
  
    - name: Deploy Frontend Files
      # Deploy the built 'dist' folder content to the server's static root
      run: scp -r ./frontend/dist/* ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}:/var/www/officeplanner/frontend/

    - name: Deploy Backend Files
      # Deploy the built 'publish' folder content to the server's API root
      run: scp -r ./publish/* ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}:/var/www/officeplanner/backend/

    # -----------------------------
    # 5. Restart Services via SSH
    # -----------------------------

    - name: Restart .NET Service
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.DEPLOY_HOST }}
        username: ${{ env.DEPLOY_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo systemctl restart officeplanner-api.service
          sudo systemctl status officeplanner-api.service
